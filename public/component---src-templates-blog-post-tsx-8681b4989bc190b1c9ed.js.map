{"version":3,"file":"component---src-templates-blog-post-tsx-8681b4989bc190b1c9ed.js","mappings":"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","sources":["webpack://JHBlog/./src/styles/category.ts","webpack://JHBlog/./src/styles/dateTime.ts","webpack://JHBlog/./src/components/comment.tsx","webpack://JHBlog/./src/templates/blogPost.tsx"],"sourcesContent":["import styled from \"styled-components\"\r\n\r\nconst Category = styled.span`\r\n  display: block;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default Category\r\n","import styled from \"styled-components\"\r\n\r\nconst DateTime = styled.time`\r\n  margin-top: 12px;\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-regular);\r\n  color: var(--color-text-3);\r\n`\r\n\r\nexport default DateTime\r\n","import React, { useRef, useContext, useEffect } from \"react\"\r\n\r\nimport ThemeContext from \"Stores/themeContext\"\r\nimport useSiteMetadata from \"Hooks/useSiteMetadata\"\r\nimport { DARK } from \"Constants/theme\"\r\n\r\nconst src = \"https://utteranc.es\"\r\nconst utterancesSelector = \"iframe.utterances-frame\"\r\nconst LIGHT_THEME = \"github-light\"\r\nconst DARK_THEME = \"github-dark\"\r\n\r\ntype ThemeMode = typeof LIGHT_THEME | typeof DARK_THEME\r\n\r\nconst Comment = () => {\r\n  const site = useSiteMetadata()\r\n  const { repo } = site.utterances ?? { repo: undefined }\r\n  const theme = useContext(ThemeContext)\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const isUtterancesCreated = useRef(false)\r\n\r\n  useEffect(() => {\r\n    if (!repo) return\r\n    let themeMode: ThemeMode\r\n\r\n    if (!isUtterancesCreated.current) {\r\n      themeMode =\r\n        document.body.dataset.theme === DARK ? DARK_THEME : LIGHT_THEME\r\n    } else themeMode = theme === DARK ? DARK_THEME : LIGHT_THEME\r\n\r\n    const createUtterancesEl = () => {\r\n      const comment = document.createElement(\"script\")\r\n      const attributes = {\r\n        src: `${src}/client.js`,\r\n        repo,\r\n        \"issue-term\": \"title\",\r\n        label: \"comment\",\r\n        theme: themeMode,\r\n        crossOrigin: \"anonymous\",\r\n        async: \"true\",\r\n      }\r\n      Object.entries(attributes).forEach(([key, value]) => {\r\n        comment.setAttribute(key, value)\r\n      })\r\n      containerRef.current?.appendChild(comment)\r\n      isUtterancesCreated.current = true\r\n    }\r\n\r\n    const utterancesEl = containerRef.current?.querySelector(\r\n      utterancesSelector\r\n    ) as HTMLIFrameElement\r\n\r\n    const postThemeMessage = () => {\r\n      if (!utterancesEl) return\r\n      const message = {\r\n        type: \"set-theme\",\r\n        theme: themeMode,\r\n      }\r\n      utterancesEl?.contentWindow?.postMessage(message, src)\r\n    }\r\n\r\n    isUtterancesCreated.current ? postThemeMessage() : createUtterancesEl()\r\n  }, [repo, theme])\r\n\r\n  return <div ref={containerRef} />\r\n}\r\n\r\nComment.displayName = \"comment\"\r\n\r\nexport default Comment\r\n","import React from \"react\"\r\nimport { graphql } from \"gatsby\"\r\nimport styled from \"styled-components\"\r\n\r\nimport type { Query } from \"Types/GraphQL\"\r\nimport Layout from \"Layouts/layout\"\r\nimport SEO from \"Components/seo\"\r\nimport Comment from \"Components/comment\"\r\nimport { rhythm } from \"Styles/typography\"\r\nimport Category from \"Styles/category\"\r\nimport DateTime from \"Styles/dateTime\"\r\nimport Markdown from \"Styles/markdown\"\r\n\r\ninterface BlogPostProps {\r\n  data: Query\r\n}\r\n\r\nconst BlogPost: React.FC<BlogPostProps> = ({ data }) => {\r\n  const { markdownRemark } = data\r\n  const { frontmatter, html } = markdownRemark!\r\n  const { title, desc, thumbnail, date, category } = frontmatter!\r\n\r\n  const ogImagePath = thumbnail && thumbnail?.childImageSharp?.gatsbyImageData?.src\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title={title} desc={desc} image={ogImagePath!} />\r\n      <main>\r\n        <article>\r\n          <OuterWrapper>\r\n            <InnerWrapper>\r\n              <div>\r\n                <header>\r\n                  <Info>\r\n                    <PostCategory>{category}</PostCategory>\r\n                    <Time dateTime={date}>{date}</Time>\r\n                  </Info>\r\n                  <Title>{title}</Title>\r\n                  <Desc>{desc}</Desc>\r\n                </header>\r\n                <Divider />\r\n                <Markdown\r\n                  dangerouslySetInnerHTML={{ __html: html ?? \"\" }}\r\n                  rhythm={rhythm}\r\n                />\r\n              </div>\r\n            </InnerWrapper>\r\n          </OuterWrapper>\r\n        </article>\r\n        <CommentWrap>\r\n          <Comment />\r\n        </CommentWrap>\r\n      </main>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst OuterWrapper = styled.div`\r\n  margin-top: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    margin-top: var(--sizing-lg);\r\n  }\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: var(--post-width);\r\n  margin: 0 auto;\r\n  padding-bottom: var(--sizing-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: 87.5%;\r\n  }\r\n`\r\n\r\nconst CommentWrap = styled.section`\r\n  width: 100%;\r\n  padding: 0 var(--padding-sm);\r\n  margin: 0 auto;\r\n  margin-bottom: var(--sizing-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst PostCategory = styled(Category)`\r\n  font-size: 0.875rem;\r\n  font-weight: var(--font-weight-semi-bold);\r\n`\r\n\r\nconst Info = styled.div`\r\n  margin-bottom: var(--sizing-md);\r\n`\r\n\r\nconst Time = styled(DateTime)`\r\n  display: block;\r\n  margin-top: var(--sizing-xs);\r\n`\r\n\r\nconst Desc = styled.p`\r\n  margin-top: var(--sizing-lg);\r\n  line-height: 1.5;\r\n  font-size: var(--text-lg);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.31579;\r\n    font-size: 1.1875rem;\r\n  }\r\n`\r\n\r\nconst Divider = styled.div`\r\n  width: 100%;\r\n  height: 1px;\r\n  background-color: var(--color-gray-3);\r\n  margin-top: var(--sizing-lg);\r\n  margin-bottom: var(--sizing-lg);\r\n`\r\n\r\nconst Title = styled.h1`\r\n  font-weight: var(--font-weight-bold);\r\n  line-height: 1.1875;\r\n  font-size: var(--text-xl);\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.md}) {\r\n    line-height: 1.21875;\r\n    font-size: 2.5rem;\r\n  }\r\n\r\n  @media (max-width: ${({ theme }) => theme.device.sm}) {\r\n    line-height: 1.21875;\r\n    font-size: 2rem;\r\n  }\r\n`\r\n\r\nexport const query = graphql`query ($slug: String!) {\r\n  markdownRemark(fields: {slug: {eq: $slug}}) {\r\n    html\r\n    frontmatter {\r\n      title\r\n      desc\r\n      thumbnail {\r\n        childImageSharp {\r\n          gatsbyImageData(placeholder: BLURRED, layout: FIXED)\r\n        }\r\n      }\r\n      date(formatString: \"YYYY-MM-DD\")\r\n      category\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nexport default BlogPost\r\n"],"names":["Category","styled","DateTime","src","LIGHT_THEME","DARK_THEME","Comment","site","useSiteMetadata","repo","utterances","undefined","theme","useContext","ThemeContext","containerRef","useRef","isUtterancesCreated","useEffect","themeMode","current","DARK","document","body","dataset","utterancesEl","_containerRef$current2","querySelector","message","type","contentWindow","_utterancesEl$content","postMessage","postThemeMessage","comment","createElement","attributes","label","crossOrigin","async","Object","entries","forEach","_ref","key","value","setAttribute","_containerRef$current","appendChild","createUtterancesEl","React","ref","displayName","OuterWrapper","componentId","_ref2","device","sm","InnerWrapper","_ref3","CommentWrap","_ref4","PostCategory","Info","Time","Desc","_ref5","Divider","Title","_ref6","md","_ref7","data","markdownRemark","frontmatter","html","title","desc","thumbnail","date","category","ogImagePath","childImageSharp","_thumbnail$childImage","gatsbyImageData","_thumbnail$childImage2","Layout","SEO","image","dateTime","Markdown","dangerouslySetInnerHTML","__html","rhythm"],"sourceRoot":""}